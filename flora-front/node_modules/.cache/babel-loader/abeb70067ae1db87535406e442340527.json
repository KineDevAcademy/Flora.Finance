{"ast":null,"code":"var _jsxFileName = \"/home/arieiro/rust/Flora.Network/flora-front/src/components/AccountSelector.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Menu, Button, Dropdown, Container, Icon, Image, Label } from 'semantic-ui-react';\nimport flora from \"../images/flora.svg\";\nimport { useSubstrate } from '../substrate-lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const {\n    keyring\n  } = useSubstrate();\n  const {\n    setAccountAddress\n  } = props;\n  const [accountSelected, setAccountSelected] = useState(''); // Get the list of accounts we possess the private key for\n\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n  const initialAddress = keyringOptions.length > 0 ? keyringOptions[0] = '' : ''; // Set the initial address\n\n  useEffect(() => {\n    setAccountAddress(initialAddress);\n    setAccountSelected(initialAddress);\n  }, [setAccountAddress, initialAddress]);\n\n  const onChange = address => {\n    // Update state with new account address\n    setAccountAddress(address);\n    setAccountSelected(address);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    attached: \"top\",\n    tabular: true,\n    style: {\n      backgroundColor: '#fff',\n      borderColor: '#fff',\n      paddingTop: '1em',\n      paddingBottom: '1em'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Menu.Menu, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: flora,\n          size: \"medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Menu.Menu, {\n        position: \"right\",\n        style: {\n          alignItems: 'center'\n        },\n        children: [!accountSelected ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Add your account with the\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: \"https://github.com/polkadot-js/extension\",\n            children: \"Polkadot JS Extension\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n          text: accountSelected,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            basic: true,\n            circular: true,\n            size: \"large\",\n            icon: \"user\",\n            color: accountSelected ? 'green' : 'red'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          search: true,\n          selection: true,\n          clearable: true,\n          placeholder: \"Select an account\",\n          options: keyringOptions,\n          onChange: (_, dropdown) => {\n            onChange(dropdown.value);\n            console.log();\n          },\n          value: accountSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BalanceAnnotation, {\n          accountSelected: accountSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"Xtog0Eht0kwQU4B8Ldw51Ch5XWQ=\", false, function () {\n  return [useSubstrate];\n});\n\n_c = Main;\n\nfunction BalanceAnnotation(props) {\n  _s2();\n\n  const {\n    accountSelected\n  } = props;\n  const {\n    api\n  } = useSubstrate();\n  const [accountBalance, setAccountBalance] = useState(0); // When account address changes, update subscriptions\n\n  useEffect(() => {\n    let unsubscribe; // If the user has selected an address, create a new subscription\n\n    accountSelected && api.query.system.account(accountSelected, balance => {\n      setAccountBalance(balance.data.free.toHuman());\n    }).then(unsub => {\n      unsubscribe = unsub;\n    }).catch(console.error);\n    return () => unsubscribe && unsubscribe();\n  }, [api, accountSelected]);\n  return accountSelected ? /*#__PURE__*/_jsxDEV(Label, {\n    pointing: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      name: \"money\",\n      color: \"green\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this), accountBalance]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 7\n  }, this) : null;\n}\n\n_s2(BalanceAnnotation, \"K8CE07JZT01VekjzFmDKDxLQvg0=\", false, function () {\n  return [useSubstrate];\n});\n\n_c2 = BalanceAnnotation;\nexport default function AccountSelector(props) {\n  _s3();\n\n  const {\n    api,\n    keyring\n  } = useSubstrate();\n  return keyring.getPairs && api.query ? /*#__PURE__*/_jsxDEV(Main, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 42\n  }, this) : null;\n}\n\n_s3(AccountSelector, \"HDzSjrVOVzdkdXtHPW4qm3XuKeI=\", false, function () {\n  return [useSubstrate];\n});\n\n_c3 = AccountSelector;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Main\");\n$RefreshReg$(_c2, \"BalanceAnnotation\");\n$RefreshReg$(_c3, \"AccountSelector\");","map":{"version":3,"sources":["/home/arieiro/rust/Flora.Network/flora-front/src/components/AccountSelector.js"],"names":["React","useState","useEffect","CopyToClipboard","Menu","Button","Dropdown","Container","Icon","Image","Label","useSubstrate","Main","props","keyring","setAccountAddress","accountSelected","setAccountSelected","keyringOptions","getPairs","map","account","key","address","value","text","meta","name","toUpperCase","icon","initialAddress","length","onChange","backgroundColor","borderColor","paddingTop","paddingBottom","flora","alignItems","_","dropdown","console","log","BalanceAnnotation","api","accountBalance","setAccountBalance","unsubscribe","query","system","balance","data","free","toHuman","then","unsub","catch","error","AccountSelector"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport {\n  Menu,\n  Button,\n  Dropdown,\n  Container,\n  Icon,\n  Image,\n  Label\n} from 'semantic-ui-react';\nimport flora from '../images/flora.svg';\n\nimport { useSubstrate } from '../substrate-lib';\n\nfunction Main (props) {\n  const { keyring } = useSubstrate();\n  const { setAccountAddress } = props;\n  const [accountSelected, setAccountSelected] = useState('');\n\n  // Get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n\n  const initialAddress =\n    keyringOptions.length > 0 ? keyringOptions[0] = '' : '';\n\n  // Set the initial address\n  useEffect(() => {\n    setAccountAddress(initialAddress);\n    setAccountSelected(initialAddress);\n  }, [setAccountAddress, initialAddress]);\n\n  const onChange = address => {\n    // Update state with new account address\n    setAccountAddress(address);\n    setAccountSelected(address);\n  };\n\n  return (\n    <Menu\n      attached='top'\n      tabular\n      style={{\n        backgroundColor: '#fff',\n        borderColor: '#fff',\n        paddingTop: '1em',\n        paddingBottom: '1em'\n      }}\n    >\n    <Container>\n      <Menu.Menu>\n        <Image src={flora} size='medium' />\n      </Menu.Menu>\n      <Menu.Menu position='right' style={{ alignItems: 'center' }}>\n        { !accountSelected\n          ? <span>\n            Add your account with the{' '}\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href='https://github.com/polkadot-js/extension'\n              >\n                Polkadot JS Extension\n              </a>\n            </span>\n            : null }\n          <CopyToClipboard text={accountSelected}>\n            <Button\n              basic\n              circular\n              size='large'\n              icon='user'\n              color={accountSelected ? 'green' : 'red'}\n            />\n          </CopyToClipboard>\n          <Dropdown\n            search\n            selection\n            clearable\n            placeholder='Select an account'\n            options={keyringOptions}\n            onChange={(_, dropdown) => {\n              onChange(dropdown.value);\n              console.log()\n            }}\n            value={accountSelected}\n          />\n          \n          <BalanceAnnotation accountSelected={accountSelected} />\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  );\n}\n\nfunction BalanceAnnotation (props) {\n  const { accountSelected } = props;\n  const { api } = useSubstrate();\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  // When account address changes, update subscriptions\n  useEffect(() => {\n    let unsubscribe;\n\n    // If the user has selected an address, create a new subscription\n    accountSelected &&\n      api.query.system.account(accountSelected, balance => {\n        setAccountBalance(balance.data.free.toHuman());\n      })\n        .then(unsub => {\n          unsubscribe = unsub;\n        })\n        .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api, accountSelected]);\n\n  return accountSelected\n    ? <Label pointing='left'>\n        <Icon name='money' color='green' />\n        {accountBalance}\n      </Label>\n    : null;\n}\n\nexport default function AccountSelector (props) {\n  const { api, keyring } = useSubstrate();\n  return keyring.getPairs && api.query ? <Main {...props} /> : null;\n}\n"]},"metadata":{},"sourceType":"module"}